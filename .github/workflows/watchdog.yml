name: watchdog_gha_prod_workflow

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *" # runs every 5 minutes

jobs:
  monitor:
    runs-on: ubuntu-latest
    steps:
      - name: Check queued workflows and raise issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          MAIN_WORKFLOW: "blank.yml" # change to your workflow filename
        run: |
          echo "Checking workflow: $MAIN_WORKFLOW"

          # Get last 5 runs of this workflow
          runs=$(gh api repos/$REPO/actions/workflows/${MAIN_WORKFLOW}/runs \
            --jq '.workflow_runs[0:5] | map({status: .status, conclusion: .conclusion, created_at: .created_at, id: .id, html_url: .html_url})')

          echo "Runs: $runs"

          # Extract queued runs
          queued=$(echo "$runs" | jq -c '.[] | select(.status=="queued")')
          if [ -z "$queued" ]; then
            echo "No queued runs found"
            exit 0
          fi

          # Check if any queued run is older than 5 minutes
          now=$(date -u +%s)
          while IFS= read -r run; do
            created=$(echo "$run" | jq -r .created_at)
            url=$(echo "$run" | jq -r .html_url)
            ts=$(date -u -d "$created" +%s)
            age=$(( (now - ts) / 60 ))

            if [ "$age" -gt 5 ]; then
              echo "Workflow stuck in queue for $age minutes! Run: $url"

              # Check if issue already exists
              existing=$(gh issue list --repo "$REPO" --state open --search "Workflow stuck in queue $url" --json number --jq '.[0].number')
              if [ -z "$existing" ]; then
                gh issue create \
                  --repo "$REPO" \
                  --title "⚠️prod monitoring Workflow stuck in queue for $age minutes" \
                  --body "The workflow **$MAIN_WORKFLOW** has been queued for more than 5 minutes.\n\n- Run: $url\n- Created at: $created\n- Age: $age minutes"
              else
                echo "Issue #$existing already exists, skipping creation."
              fi
            fi
          done <<< "$queued"
